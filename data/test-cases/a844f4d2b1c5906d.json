{
  "uid" : "a844f4d2b1c5906d",
  "name" : "apiAddTvShowToPlayListTest",
  "fullName" : "api.CheckMediaListsTests.apiAddTvShowToPlayListTest",
  "historyId" : "ce18466f21d88e5a5951835378c06a8c",
  "time" : {
    "start" : 1623394485005,
    "stop" : 1623394488020,
    "duration" : 3015
  },
  "status" : "skipped",
  "statusMessage" : "Failed -> addRandomMediaToPlayList()",
  "statusTrace" : "java.lang.IllegalArgumentException: Failed -> addRandomMediaToPlayList()\n\tat org.springframework.util.Assert.isTrue(Assert.java:118)\n\tat api.MediaApi.addRandomMediaToPlayList(MediaApi.java:226)\n\tat api.CheckMediaListsTests.apiAddTvShowToPlayListTest(CheckMediaListsTests.java:83)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:648)\n\tat org.testng.TestRunner.run(TestRunner.java:505)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:455)\n\tat org.testng.SuiteRunner.access$000(SuiteRunner.java:40)\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)\n\tat org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "logTestStat",
    "time" : {
      "start" : 1623394485003,
      "stop" : 1623394485003,
      "duration" : 0
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "logTestStop",
    "time" : {
      "start" : 1623394488021,
      "stop" : 1623394488021,
      "duration" : 0
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "afterTest",
    "time" : {
      "start" : 1623394515428,
      "stop" : 1623394517120,
      "duration" : 1692
    },
    "description" : "",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "package",
    "value" : "api.CheckMediaListsTests"
  }, {
    "name" : "testClass",
    "value" : "api.CheckMediaListsTests"
  }, {
    "name" : "testMethod",
    "value" : "apiAddTvShowToPlayListTest"
  }, {
    "name" : "parentSuite",
    "value" : "API Suite"
  }, {
    "name" : "suite",
    "value" : "Check Media Lists Tests"
  }, {
    "name" : "subSuite",
    "value" : "api.CheckMediaListsTests"
  }, {
    "name" : "host",
    "value" : "travis-job-6ea6351a-2732-45f6-a044-3927ebe12d84"
  }, {
    "name" : "thread",
    "value" : "4298@travis-job-6ea6351a-2732-45f6-a044-3927ebe12d84.TestNG-tests-1(59)"
  }, {
    "name" : "framework",
    "value" : "testng"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "a844f4d2b1c5906d.json",
  "parameterValues" : [ ]
}